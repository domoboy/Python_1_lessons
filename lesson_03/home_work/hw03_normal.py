__author__ = 'Коноплянников Николай Иванович'

# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

'''

Опять математика :'( хнык
Для понимания решения изучено:
Что такое число Фибоначче - https://ru.wikipedia.org/wiki/Числа_Фибоначчи
5 способов вычислить Фибоначчи - https://habr.com/post/261159/
Про разные способы Фибоначчи - http://qaru.site/questions/60043/how-to-write-the-fibonacci-sequence-in-python
Про итераторы/генераторы и yield - https://habr.com/post/132554/

'''


def fi():
    a, b = 1, 1  # Первые элементы ряда
    while True:  # Истенно возвращаем генератор a
        yield a  # Выполняем условие ниже
        a, b = b, a + b  # здесь как в замене a и b без новой переменной a, b = b, a


def sub_fib(n, m):  # Создаем функцию, которая будет показывать числа Фибоначче между n и m
    for cur in fi():  # Начинаем проверку
        if cur > m:  # Если значение стало больше m(верхнего значения) возвращаем результат функции
            return
        if cur >= n: # Если значение больше или равно начальному значению, запускаем генератор
            yield cur


n = int(input("Введите начальное значение (n):"))
m = int(input("Введите значение m, результатом будут все числа Фибоначче, между n и m"))
print("Ряд Фибоначче в промежутке между {} и {}:".format(n, m))
for i in sub_fib(n, m):  # Для элементов между n и m выводим элементы
    print(i)


# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

